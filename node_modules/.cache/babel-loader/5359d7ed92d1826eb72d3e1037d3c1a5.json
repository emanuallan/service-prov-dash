{"ast":null,"code":"var _jsxFileName = \"/Users/aserna/Desktop/service-prov-dash/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Card } from 'antd';\nimport dispersive from \"../img/dispersive-logo.jpg\"; //15 17%\n\nimport '../App.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppHistory from '../routers/AppHistory';\nimport Particles from 'react-particles-js';\nimport { appLogin } from '../actions/LoginActions';\nconst particlesDesign = {\n  particles: {\n    number: {\n      value: 75,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    size: {\n      value: 3\n    }\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true\n      },\n      onclick: {\n        enable: true,\n        mode: \"push\"\n      }\n    }\n  }\n};\n\nclass NormalLoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeString = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.props.form.validateFields((err, values) => {\n        // all it does so far, reloads to /dash -> \n        // authentication doesnt actually work\n        if (!err) {\n          //e.preventDefault() -> if ya wanna see the error, uncomment this \n          console.log('Received values of form: ', values);\n          console.log(\"your inquiry: \" + this.props.appLogin(values));\n          AppHistory.push(\"/dash\");\n        } else {\n          e.preventDefault();\n        }\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\"\n      },\n      className: \"Fade-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      params: particlesDesign,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: dispersive,\n      alt: \"logo\",\n      style: {\n        height: '20vmin',\n        marginBottom: \"11%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, getFieldDecorator('login', {\n      rules: [{\n        required: true,\n        message: 'Please input your username'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Forgot password\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Log in\")), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"register now!\")))));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);\nWrappedNormalLoginForm.propTypes = {\n  appLogin: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  appLogin\n})(WrappedNormalLoginForm);","map":{"version":3,"sources":["/Users/aserna/Desktop/service-prov-dash/src/components/Login.js"],"names":["React","Component","Form","Icon","Input","Button","Checkbox","Card","dispersive","PropTypes","connect","AppHistory","Particles","appLogin","particlesDesign","particles","number","value","density","enable","value_area","size","interactivity","events","onhover","onclick","mode","NormalLoginForm","constructor","props","onChangeString","e","setState","target","id","handleSubmit","form","validateFields","err","values","console","log","push","preventDefault","state","username","password","render","getFieldDecorator","position","top","left","width","height","textAlign","marginBottom","rules","required","message","color","float","WrappedNormalLoginForm","create","name","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Card } from 'antd';\nimport dispersive from \"../img/dispersive-logo.jpg\"; //15 17%\nimport '../App.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppHistory from '../routers/AppHistory';\nimport Particles from 'react-particles-js';\nimport { appLogin } from '../actions/LoginActions';\n\nconst particlesDesign = {\n    particles: {\n        number: {\n            value: 75,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        },\n        size: {\n            value: 3\n        }\n    },\n    interactivity: {\n        events: {\n            onhover: {\n                enable: true,\n\n            },\n            onclick: {\n                enable: true,\n                mode: \"push\"\n            }\n        }\n    }\n}\n\nclass NormalLoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\"\n        };\n    }\n\n    onChangeString = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n\n    handleSubmit = e => {\n\n        this.props.form.validateFields((err, values) => {\n            // all it does so far, reloads to /dash -> \n            // authentication doesnt actually work\n            if (!err) {\n                //e.preventDefault() -> if ya wanna see the error, uncomment this \n                console.log('Received values of form: ', values);\n                console.log(\"your inquiry: \" + this.props.appLogin(values));\n                AppHistory.push(\"/dash\");\n            } else {\n                e.preventDefault()\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"body\">\n\n                <div style={{\n                    position: \"fixed\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\"\n                }}\n                    className=\"Fade-in\"\n                >\n\n                    <Particles params={particlesDesign} />\n\n                </div>\n\n                <Card style={{ width: '300px' }}>\n                    <div style={{ textAlign: 'center' }} >\n                        <img src={dispersive} alt=\"logo\" style={{ height: '20vmin', marginBottom: \"11%\" }} />\n                    </div>\n\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item>\n                            {getFieldDecorator('login', {\n                                rules: [{ required: true, message: 'Please input your username' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Username\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {/* {getFieldDecorator('remember', {\n                                valuePropName: 'checked',\n                                initialValue: true,\n                            })(<Checkbox>Remember me</Checkbox>)} */}\n                            <div style={{ float: \"right\" }}>\n                                <a href=\"\">\n                                    Forgot password\n                            </a>\n                            </div>\n\n                            <div>\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n                                    Log in\n                                </Button>\n                            </div>\n\n                            Or <a href=\"\">register now!</a>\n                        </Form.Item>\n                    </Form>\n\n                </Card>\n\n            </div>\n        );\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nWrappedNormalLoginForm.propTypes = {\n    appLogin: PropTypes.func.isRequired\n};\n\nexport default connect(null, { appLogin })(WrappedNormalLoginForm);"]},"metadata":{},"sourceType":"module"}