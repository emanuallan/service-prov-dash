{"ast":null,"code":"var _jsxFileName = \"/Users/aserna/Desktop/service-prov-dash/src/components/VTC_Table.js\";\nimport React, { Component } from 'react';\nimport { Table, Input, Typography, Popconfirm, notification, Tag, Spin, message } from 'antd';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchVTCS, deleteVTC, selectVTC } from '../actions/VTC_Actions';\nimport { Login } from '../actions/LoginActions';\nimport '../App.css';\nconst Title = Typography.Title;\nconst Search = Input.Search;\n\nconst deleteNotification = vtc_id => {\n  message.warning('VTC: ' + vtc_id + ' has been deleted');\n};\n\nconst editNotification = vtc_id => {\n  message.success('VTC: ' + vtc_id + ' has been updated');\n};\n\nconst createNotification = vtc_id => {\n  message.success('VTC: ' + vtc_id + ' has been added');\n};\n\nclass VTC_Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = vtc_id => {\n      window.scrollTo({\n        top: 2000,\n        behavior: 'smooth'\n      });\n      this.props.selectVTC(vtc_id);\n    };\n\n    this.onDelete = vtc_id => {\n      const del_vtc = {\n        vtc_id: vtc_id\n      };\n      deleteNotification(vtc_id);\n      this.props.deleteVTC(del_vtc);\n\n      for (var i = 0; i < this.state.vtcsOnDisplay.length; i++) {\n        if (this.state.vtcsOnDisplay[i].vtc_id == vtc_id) {\n          this.state.vtcsOnDisplay.splice(i, 1);\n        }\n      }\n\n      for (var i = 0; i < this.state.vtcs.length; i++) {\n        if (this.state.vtcs[i].vtc_id == vtc_id) {\n          this.state.vtcs.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        vtcs: this.state.vtcs\n      });\n    };\n\n    this.handleChange = e => {\n      let currentList = this.state.vtcs;\n      let newList = [];\n\n      if (e.target.value !== \"\") {\n        newList = currentList.filter(v => {\n          const v_lc = v.vtc_id.toLowerCase();\n          const filter = e.target.value.toLowerCase();\n          return v_lc.includes(filter);\n        });\n        this.setState({\n          vtcsOnDisplay: newList\n        });\n      } else {\n        this.setState({\n          vtcsOnDisplay: currentList\n        });\n        return;\n      }\n    };\n\n    this.state = {\n      vtcs: [],\n      vtcsOnDisplay: [],\n      //need 2 different kinds of VTC arrays for search functionality\n      loaded: false\n    };\n    this.columns = [{\n      title: 'State',\n      width: 110,\n      dataIndex: 'state',\n      key: 'state',\n      fixed: 'left',\n      render: status => {\n        let color = status === 'online' ? 'green' : 'volcano';\n        return React.createElement(Tag, {\n          color: color,\n          key: status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, status.toUpperCase());\n      }\n    }, {\n      title: 'VTC ID',\n      width: 140,\n      dataIndex: 'vtc_id',\n      key: 'vtc_id',\n      fixed: 'left',\n      render: vtc_id => React.createElement(\"a\", {\n        onClick: () => this.handleSelect(vtc_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" \", vtc_id, \" \")\n    }, {\n      title: 'Common Name',\n      width: 140,\n      dataIndex: 'common_name',\n      key: 'common_name'\n    }, {\n      title: 'Home DPS',\n      dataIndex: 'home_dps',\n      key: 'home_dps',\n      width: 140\n    }, {\n      title: 'nic rl mbps',\n      dataIndex: 'nic_rl_mbps',\n      key: 'nic_rl_mbps',\n      width: 140\n    }, {\n      title: 'Exclude TCP Ports',\n      dataIndex: 'exclude_tcp_ports',\n      key: 'exclude_tcp_ports',\n      width: 140\n    }, {\n      title: 'Exclude UDP Ports',\n      dataIndex: 'exclude_udp_ports',\n      key: 'exclude_udp_ports',\n      width: 140\n    }, {\n      title: 'Whitelist',\n      dataIndex: 'whitelist',\n      key: 'whitelist',\n      width: 140\n    }, {\n      title: 'User Authorization',\n      dataIndex: 'user_auth',\n      key: 'user_auth',\n      width: 130\n    }, {\n      title: 'PM Enable',\n      dataIndex: 'pm_enable',\n      key: 'pm_enable',\n      width: 130\n    }, {\n      title: 'Registration Required',\n      dataIndex: 'reg_required',\n      key: 'reg_required',\n      width: 130\n    }, {\n      title: 'Netflow Index',\n      dataIndex: 'netflow_index',\n      key: 'netflow_index',\n      width: 'auto'\n    }, {\n      title: 'Delete',\n      key: 'operation',\n      fixed: 'right',\n      width: 80,\n      render: vtc => React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        okType: \"danger\",\n        onConfirm: () => this.onDelete(vtc.vtc_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Delete\"))\n    }];\n    this.onDelete = this.onDelete.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.fetchVTCS();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let editted = false;\n\n    if (nextProps.newVTC) {\n      if (!(typeof nextProps.newVTC.vtc_id == \"undefined\")) {\n        for (var i = 0; i < this.state.vtcsOnDisplay.length; i++) {\n          if (this.state.vtcsOnDisplay[i].vtc_id == nextProps.newVTC.vtc_id) {\n            this.state.vtcsOnDisplay.splice(i, 1);\n            editted = true;\n          }\n        }\n\n        for (var i = 0; i < this.state.vtcs.length; i++) {\n          if (this.state.vtcs[i].vtc_id == nextProps.newVTC.vtc_id) {\n            this.state.vtcs.splice(i, 1);\n            editted = true;\n          }\n        }\n\n        this.state.vtcsOnDisplay.unshift(nextProps.newVTC);\n\n        if (this.state.vtcs.length != this.state.vtcsOnDisplay.length) {\n          this.state.vtcs.unshift(nextProps.newVTC);\n        }\n\n        editted ? editNotification(nextProps.newVTC.vtc_id) : createNotification(nextProps.newVTC.vtc_id);\n      }\n    }\n  }\n\n  render() {\n    console.log(this.props.AUTH_TOKEN);\n\n    if (!this.state.loaded) {\n      for (let i = 0; i < this.props.vtcs.length; i++) {\n        this.state.vtcsOnDisplay.push(this.props.vtcs[i]);\n        this.state.vtcs.push(this.props.vtcs[i]);\n      }\n\n      if (this.state.vtcsOnDisplay.length != 0) {\n        this.setState({\n          loaded: true\n        });\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Title, {\n      level: 2,\n      style: {\n        float: \"left\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \" VTC's \"), React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Search, {\n      placeholder: \"Search\",\n      id: \"search_vtc\",\n      onChange: this.handleChange,\n      style: {\n        width: 215\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(Table, {\n      columns: this.columns,\n      scroll: {\n        x: '130%',\n        y: \"max-content\"\n      },\n      loading: !this.state.loaded,\n      dataSource: this.state.vtcsOnDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }));\n  }\n\n}\n\nVTC_Table.propTypes = {\n  selectVTC: PropTypes.func.isRequired,\n  deleteVTC: PropTypes.func.isRequired,\n  fetchVTCS: PropTypes.func.isRequired,\n  vtcs: PropTypes.array.isRequired,\n  newVTC: PropTypes.object,\n  AUTH_TOKEN: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  vtcs: state.vtcs.vtcs,\n  //from index.js in reducers\n  newVTC: state.vtcs.vtc,\n  AUTH_TOKEN: state.login.session_token\n});\n\nexport default connect(mapStateToProps, {\n  fetchVTCS,\n  deleteVTC,\n  selectVTC\n})(VTC_Table);","map":{"version":3,"sources":["/Users/aserna/Desktop/service-prov-dash/src/components/VTC_Table.js"],"names":["React","Component","Table","Input","Typography","Popconfirm","notification","Tag","Spin","message","PropTypes","connect","fetchVTCS","deleteVTC","selectVTC","Login","Title","Search","deleteNotification","vtc_id","warning","editNotification","success","createNotification","VTC_Table","constructor","props","handleSelect","window","scrollTo","top","behavior","onDelete","del_vtc","i","state","vtcsOnDisplay","length","splice","vtcs","setState","handleChange","e","currentList","newList","target","value","filter","v","v_lc","toLowerCase","includes","loaded","columns","title","width","dataIndex","key","fixed","render","status","color","toUpperCase","vtc","bind","componentWillMount","componentWillReceiveProps","nextProps","editted","newVTC","unshift","console","log","AUTH_TOKEN","push","float","textAlign","x","y","propTypes","func","isRequired","array","object","mapStateToProps","login","session_token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Input, Typography, Popconfirm, notification, Tag, Spin, message } from 'antd';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchVTCS, deleteVTC, selectVTC } from '../actions/VTC_Actions';\nimport { Login } from '../actions/LoginActions';\nimport '../App.css';\n\nconst { Title } = Typography;\nconst Search = Input.Search;\n\nconst deleteNotification = (vtc_id) => {\n    message.warning('VTC: ' + vtc_id + ' has been deleted');\n};\n\nconst editNotification = (vtc_id) => {\n    message.success('VTC: ' + vtc_id + ' has been updated');\n};\n\nconst createNotification = (vtc_id) => {\n    message.success('VTC: ' + vtc_id + ' has been added');\n};\n\nclass VTC_Table extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            vtcs: [],\n            vtcsOnDisplay: [], //need 2 different kinds of VTC arrays for search functionality\n            loaded: false,\n        }\n        this.columns = [\n            {\n                title: 'State',\n                width: 110,\n                dataIndex: 'state',\n                key: 'state',\n                fixed: 'left',\n                render: (status) => {\n                    let color = (status === 'online') ? 'green' : 'volcano';\n                    return (\n                        <Tag color={color} key={status}>\n                            {status.toUpperCase()}\n                        </Tag>\n                    );\n                }\n            },\n            {\n                title: 'VTC ID',\n                width: 140,\n                dataIndex: 'vtc_id',\n                key: 'vtc_id',\n                fixed: 'left',\n                render: vtc_id => <a onClick={() => this.handleSelect(vtc_id)}> {vtc_id} </a>,\n            },\n            {\n                title: 'Common Name',\n                width: 140,\n                dataIndex: 'common_name',\n                key: 'common_name',\n            },\n            {\n                title: 'Home DPS',\n                dataIndex: 'home_dps',\n                key: 'home_dps',\n                width: 140,\n            },\n            {\n                title: 'nic rl mbps',\n                dataIndex: 'nic_rl_mbps',\n                key: 'nic_rl_mbps',\n                width: 140,\n            },\n            {\n                title: 'Exclude TCP Ports',\n                dataIndex: 'exclude_tcp_ports',\n                key: 'exclude_tcp_ports',\n                width: 140,\n            },\n            {\n                title: 'Exclude UDP Ports',\n                dataIndex: 'exclude_udp_ports',\n                key: 'exclude_udp_ports',\n                width: 140,\n            },\n            {\n                title: 'Whitelist',\n                dataIndex: 'whitelist',\n                key: 'whitelist',\n                width: 140,\n            },\n            {\n                title: 'User Authorization',\n                dataIndex: 'user_auth',\n                key: 'user_auth',\n                width: 130,\n            },\n            {\n                title: 'PM Enable',\n                dataIndex: 'pm_enable',\n                key: 'pm_enable',\n                width: 130,\n            },\n            {\n                title: 'Registration Required',\n                dataIndex: 'reg_required',\n                key: 'reg_required',\n                width: 130,\n            },\n            {\n                title: 'Netflow Index',\n                dataIndex: 'netflow_index',\n                key: 'netflow_index',\n                width: 'auto',\n            },\n            {\n                title: 'Delete',\n                key: 'operation',\n                fixed: 'right',\n                width: 80,\n                render: (vtc) =>\n                    (\n                        <Popconfirm title=\"Sure to delete?\" okType='danger' onConfirm={() => this.onDelete(vtc.vtc_id)} >\n                            <a href=\"javascript:;\">Delete</a>\n                        </Popconfirm >\n                    )\n            },\n        ];\n        this.onDelete = this.onDelete.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.fetchVTCS();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let editted = false;\n        if (nextProps.newVTC) {\n            if (!(typeof nextProps.newVTC.vtc_id == \"undefined\")) {\n\n                for (var i = 0; i < this.state.vtcsOnDisplay.length; i++) {\n                    if (this.state.vtcsOnDisplay[i].vtc_id == nextProps.newVTC.vtc_id) {\n                        this.state.vtcsOnDisplay.splice(i, 1);\n                        editted = true;\n                    }\n                }\n                for (var i = 0; i < this.state.vtcs.length; i++) {\n                    if (this.state.vtcs[i].vtc_id == nextProps.newVTC.vtc_id) {\n                        this.state.vtcs.splice(i, 1);\n                        editted = true;\n                    }\n                }\n\n                this.state.vtcsOnDisplay.unshift(nextProps.newVTC);\n                if (this.state.vtcs.length != this.state.vtcsOnDisplay.length) {\n                    this.state.vtcs.unshift(nextProps.newVTC);\n                }\n                (editted) ? editNotification(nextProps.newVTC.vtc_id) : createNotification(nextProps.newVTC.vtc_id)\n\n            }\n        }\n    }\n\n    handleSelect = (vtc_id) => {\n        window.scrollTo({ top: 2000, behavior: 'smooth' });\n        this.props.selectVTC(vtc_id);\n    }\n\n    onDelete = (vtc_id) => {\n        const del_vtc = {\n            vtc_id: vtc_id\n        }\n        deleteNotification(vtc_id);\n        this.props.deleteVTC(del_vtc);\n\n        for (var i = 0; i < this.state.vtcsOnDisplay.length; i++) {\n            if (this.state.vtcsOnDisplay[i].vtc_id == vtc_id) {\n                this.state.vtcsOnDisplay.splice(i, 1);\n            }\n        }\n\n        for (var i = 0; i < this.state.vtcs.length; i++) {\n            if (this.state.vtcs[i].vtc_id == vtc_id) {\n                this.state.vtcs.splice(i, 1);\n            }\n        }\n\n        this.setState({ vtcs: this.state.vtcs });\n    }\n\n    handleChange = (e) => {\n        let currentList = this.state.vtcs;\n        let newList = [];\n\n        if (e.target.value !== \"\") {\n            newList = currentList.filter(v => {\n                const v_lc = v.vtc_id.toLowerCase();\n                const filter = e.target.value.toLowerCase();\n                return v_lc.includes(filter);\n            });\n            this.setState({ vtcsOnDisplay: newList });\n        } else {\n            this.setState({ vtcsOnDisplay: currentList });\n            return\n        }\n    }\n\n    render() {\n        console.log(this.props.AUTH_TOKEN);\n        if (!this.state.loaded) {\n\n            for (let i = 0; i < this.props.vtcs.length; i++) {\n                this.state.vtcsOnDisplay.push(this.props.vtcs[i]);\n                this.state.vtcs.push(this.props.vtcs[i]);\n            }\n\n            if (this.state.vtcsOnDisplay.length != 0) {\n                this.setState({ loaded: true })\n            }\n        }\n\n        return (\n            <div>\n                <div>\n                    <Title level={2} style={{ float: \"left\", color: \"white\" }}> VTC's </Title>\n                    <div style={{ textAlign: \"right\" }}>\n                        <Search\n                            placeholder=\"Search\"\n                            id=\"search_vtc\"\n                            onChange={this.handleChange}\n                            style={{ width: 215 }}\n                        />\n                    </div>\n                </div>\n                <Table\n\n                    columns={this.columns}\n                    scroll={{ x: '130%', y: \"max-content\" }}\n                    loading={!this.state.loaded}\n                    dataSource={this.state.vtcsOnDisplay}\n                />\n            </div>\n        )\n    }\n}\n\nVTC_Table.propTypes = {\n    selectVTC: PropTypes.func.isRequired,\n    deleteVTC: PropTypes.func.isRequired,\n    fetchVTCS: PropTypes.func.isRequired,\n    vtcs: PropTypes.array.isRequired,\n    newVTC: PropTypes.object,\n    AUTH_TOKEN: PropTypes.object\n}\n\nconst mapStateToProps = state => ({\n    vtcs: state.vtcs.vtcs, //from index.js in reducers\n    newVTC: state.vtcs.vtc,\n    AUTH_TOKEN: state.login.session_token\n})\n\n\nexport default connect(mapStateToProps, { fetchVTCS, deleteVTC, selectVTC })(VTC_Table);\n"]},"metadata":{},"sourceType":"module"}