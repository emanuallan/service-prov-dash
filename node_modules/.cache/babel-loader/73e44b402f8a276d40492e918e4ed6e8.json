{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport cls from 'classnames';\nimport Context from './Context';\nconst clsPrefix = 'cp-react-org-chart-node';\nexport default class Node extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isDragging: false\n    });\n\n    _defineProperty(this, \"onDragStart\", (e, props) => {\n      const id = props.id;\n      const _this$context = this.context,\n            setIdentify = _this$context.setIdentify,\n            getNodeId = _this$context.getNodeId;\n      getNodeId('draggingNodeProps', props);\n      setIdentify(id, true);\n      this.setState({\n        isDragging: true\n      });\n    });\n\n    _defineProperty(this, \"onDragEnd\", (e, props) => {\n      const id = props.id;\n      const _this$context2 = this.context,\n            setIdentify = _this$context2.setIdentify,\n            getNodeId = _this$context2.getNodeId;\n      this.setState({\n        isDragging: false\n      });\n      getNodeId('willDropNodeId', null);\n      getNodeId('disableDropNodeId', null);\n      getNodeId('draggingNodeProps', null);\n      setIdentify(id, false);\n    });\n\n    _defineProperty(this, \"onDragOver\", (e, props) => {\n      e.preventDefault();\n    });\n\n    _defineProperty(this, \"onDragEnter\", (e, props) => {\n      const id = props.id,\n            droppable = props.droppable;\n      if (!droppable) return;\n      const _this$context3 = this.context,\n            getNodeId = _this$context3.getNodeId,\n            customDrag = _this$context3.customDrag,\n            draggingNodeProps = _this$context3.draggingNodeProps;\n\n      if (customDrag && typeof customDrag === 'function') {\n        const isDrag = customDrag(props, draggingNodeProps);\n\n        if (isDrag) {\n          getNodeId('willDropNodeId', id);\n        } else {\n          getNodeId('disableDropNodeId', id);\n        }\n      } else {\n        getNodeId('willDropNodeId', id);\n      }\n    });\n\n    _defineProperty(this, \"onDragLeave\", (e, props) => {\n      const getNodeId = this.context.getNodeId; // getNodeId('willDropNodeId', null)\n    });\n\n    _defineProperty(this, \"onDrop\", (e, props) => {\n      const droppable = props.droppable;\n      if (!droppable) return;\n      const _this$context4 = this.context,\n            customDrag = _this$context4.customDrag,\n            draggingNodeProps = _this$context4.draggingNodeProps;\n\n      if (customDrag && typeof customDrag === 'function') {\n        const isDrag = customDrag(props, draggingNodeProps);\n        if (!isDrag) return;\n        this.sureDrop(props, draggingNodeProps);\n      } else {\n        this.sureDrop(props, draggingNodeProps);\n      }\n    });\n\n    _defineProperty(this, \"sureDrop\", (dropProps, dragProps) => {\n      const _this$context5 = this.context,\n            moveNode = _this$context5.moveNode,\n            getNodeId = _this$context5.getNodeId;\n      const dropId = dropProps.id;\n      const dragId = dragProps.id;\n      getNodeId('willDropNodeId', null);\n      getNodeId('disableDropNodeId', null);\n      getNodeId('draggingNodeProps', null);\n      getNodeId('didMountNodeId', dragId);\n      moveNode(dropId, dragId);\n    });\n\n    _defineProperty(this, \"onChangeTreeDraggable\", e => {\n      const onChangeTreeDraggable = this.props.onChangeTreeDraggable;\n      onChangeTreeDraggable();\n      e.stopPropagation();\n    });\n  }\n\n  componentDidMount() {}\n\n  getProps() {\n    const dragMode = this.context.dragMode;\n    const props = {\n      onMouseDown(e) {\n        e.stopPropagation();\n      }\n\n    };\n\n    if (dragMode === 'tree') {\n      props.onMouseUp = this.onChangeTreeDraggable;\n      props.onMouseDown = this.onChangeTreeDraggable;\n    }\n\n    if (dragMode === 'node') {\n      props.draggable = true;\n\n      props.onDragEnd = e => this.onDragEnd(e, this.props);\n\n      props.onDragStart = e => this.onDragStart(e, this.props);\n    }\n\n    return props;\n  }\n\n  render() {\n    const isDragging = this.state.isDragging;\n    const _this$props = this.props,\n          droppable = _this$props.droppable,\n          id = _this$props.id;\n    const _this$context6 = this.context,\n          _this$context6$extraR = _this$context6.extraRender,\n          extraRender = _this$context6$extraR === void 0 ? () => {} : _this$context6$extraR,\n          nodeRender = _this$context6.nodeRender,\n          willDropNodeId = _this$context6.willDropNodeId,\n          didMountNodeId = _this$context6.didMountNodeId,\n          disableDropNodeId = _this$context6.disableDropNodeId;\n    const props = this.getProps();\n    const disableDrop = disableDropNodeId === id;\n    const nodeJsx = nodeRender ? nodeRender(this.props) : React.createElement(DefaultNodeRender, this.props);\n    return React.createElement(\"div\", {\n      className: clsPrefix\n    }, React.createElement(\"span\", {\n      className: \"span-wrapper\"\n    }, React.createElement(\"div\", _extends({\n      className: cls(\"node-content\", {\n        'dragging': isDragging,\n        'didMount': didMountNodeId === id,\n        'droppable': droppable,\n        'willDropNode': willDropNodeId === id,\n        'disableDropNode': disableDrop\n      })\n    }, props), React.createElement(\"div\", {\n      onDrop: e => this.onDrop(e, this.props),\n      onDragOver: e => this.onDragOver(e, this.props),\n      onDragEnter: e => this.onDragEnter(e, this.props),\n      onDragLeave: e => this.onDragLeave(e, this.props)\n    }, nodeJsx), disableDrop && React.createElement(\"div\", {\n      className: \"error\"\n    }, React.createElement(_Icon, {\n      type: \"exclamation-circle\"\n    })), React.createElement(\"div\", null, extraRender(this.props)))));\n  }\n\n}\n\n_defineProperty(Node, \"contextType\", Context);\n\nconst DefaultNodeRender = ({\n  id,\n  name\n}) => React.createElement(\"div\", {\n  className: \"default-node-render\"\n}, React.createElement(\"div\", {\n  className: \"id\"\n}, id), React.createElement(\"div\", {\n  className: \"name\"\n}, name));","map":{"version":3,"sources":["/Users/aserna/Desktop/service-prov-dash/src/lib/Node.js"],"names":["_Icon","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","cls","Context","clsPrefix","Node","PureComponent","constructor","args","isDragging","e","props","id","context","setIdentify","getNodeId","setState","preventDefault","droppable","customDrag","draggingNodeProps","isDrag","sureDrop","dropProps","dragProps","moveNode","dropId","dragId","onChangeTreeDraggable","stopPropagation","componentDidMount","getProps","dragMode","onMouseDown","onMouseUp","draggable","onDragEnd","onDragStart","render","state","extraRender","nodeRender","willDropNodeId","didMountNodeId","disableDropNodeId","disableDrop","nodeJsx","createElement","DefaultNodeRender","className","onDrop","onDragOver","onDragEnter","onDragLeave","type","name"],"mappings":"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","sourcesContent":["import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport cls from 'classnames';\nimport Context from './Context';\nconst clsPrefix = 'cp-react-org-chart-node';\nexport default class Node extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isDragging: false\n    });\n\n    _defineProperty(this, \"onDragStart\", (e, props) => {\n      const {\n        id\n      } = props;\n      const {\n        setIdentify,\n        getNodeId\n      } = this.context;\n      getNodeId('draggingNodeProps', props);\n      setIdentify(id, true);\n      this.setState({\n        isDragging: true\n      });\n    });\n\n    _defineProperty(this, \"onDragEnd\", (e, props) => {\n      const {\n        id\n      } = props;\n      const {\n        setIdentify,\n        getNodeId\n      } = this.context;\n      this.setState({\n        isDragging: false\n      });\n      getNodeId('willDropNodeId', null);\n      getNodeId('disableDropNodeId', null);\n      getNodeId('draggingNodeProps', null);\n      setIdentify(id, false);\n    });\n\n    _defineProperty(this, \"onDragOver\", (e, props) => {\n      e.preventDefault();\n    });\n\n    _defineProperty(this, \"onDragEnter\", (e, props) => {\n      const {\n        id,\n        droppable\n      } = props;\n      if (!droppable) return;\n      const {\n        getNodeId,\n        customDrag,\n        draggingNodeProps\n      } = this.context;\n\n      if (customDrag && typeof customDrag === 'function') {\n        const isDrag = customDrag(props, draggingNodeProps);\n\n        if (isDrag) {\n          getNodeId('willDropNodeId', id);\n        } else {\n          getNodeId('disableDropNodeId', id);\n        }\n      } else {\n        getNodeId('willDropNodeId', id);\n      }\n    });\n\n    _defineProperty(this, \"onDragLeave\", (e, props) => {\n      const {\n        getNodeId\n      } = this.context; // getNodeId('willDropNodeId', null)\n    });\n\n    _defineProperty(this, \"onDrop\", (e, props) => {\n      const {\n        droppable\n      } = props;\n      if (!droppable) return;\n      const {\n        customDrag,\n        draggingNodeProps\n      } = this.context;\n\n      if (customDrag && typeof customDrag === 'function') {\n        const isDrag = customDrag(props, draggingNodeProps);\n        if (!isDrag) return;\n        this.sureDrop(props, draggingNodeProps);\n      } else {\n        this.sureDrop(props, draggingNodeProps);\n      }\n    });\n\n    _defineProperty(this, \"sureDrop\", (dropProps, dragProps) => {\n      const {\n        moveNode,\n        getNodeId\n      } = this.context;\n      const {\n        id: dropId\n      } = dropProps;\n      const {\n        id: dragId\n      } = dragProps;\n      getNodeId('willDropNodeId', null);\n      getNodeId('disableDropNodeId', null);\n      getNodeId('draggingNodeProps', null);\n      getNodeId('didMountNodeId', dragId);\n      moveNode(dropId, dragId);\n    });\n\n    _defineProperty(this, \"onChangeTreeDraggable\", e => {\n      const {\n        onChangeTreeDraggable\n      } = this.props;\n      onChangeTreeDraggable();\n      e.stopPropagation();\n    });\n  }\n\n  componentDidMount() {}\n\n  getProps() {\n    const {\n      dragMode\n    } = this.context;\n    const props = {\n      onMouseDown(e) {\n        e.stopPropagation();\n      }\n\n    };\n\n    if (dragMode === 'tree') {\n      props.onMouseUp = this.onChangeTreeDraggable;\n      props.onMouseDown = this.onChangeTreeDraggable;\n    }\n\n    if (dragMode === 'node') {\n      props.draggable = true;\n\n      props.onDragEnd = e => this.onDragEnd(e, this.props);\n\n      props.onDragStart = e => this.onDragStart(e, this.props);\n    }\n\n    return props;\n  }\n\n  render() {\n    const {\n      isDragging\n    } = this.state;\n    const {\n      droppable,\n      id\n    } = this.props;\n    const {\n      extraRender = () => {},\n      nodeRender,\n      willDropNodeId,\n      didMountNodeId,\n      disableDropNodeId\n    } = this.context;\n    const props = this.getProps();\n    const disableDrop = disableDropNodeId === id;\n    const nodeJsx = nodeRender ? nodeRender(this.props) : React.createElement(DefaultNodeRender, this.props);\n    return React.createElement(\"div\", {\n      className: clsPrefix\n    }, React.createElement(\"span\", {\n      className: \"span-wrapper\"\n    }, React.createElement(\"div\", _extends({\n      className: cls(\"node-content\", {\n        'dragging': isDragging,\n        'didMount': didMountNodeId === id,\n        'droppable': droppable,\n        'willDropNode': willDropNodeId === id,\n        'disableDropNode': disableDrop\n      })\n    }, props), React.createElement(\"div\", {\n      onDrop: e => this.onDrop(e, this.props),\n      onDragOver: e => this.onDragOver(e, this.props),\n      onDragEnter: e => this.onDragEnter(e, this.props),\n      onDragLeave: e => this.onDragLeave(e, this.props)\n    }, nodeJsx), disableDrop && React.createElement(\"div\", {\n      className: \"error\"\n    }, React.createElement(_Icon, {\n      type: \"exclamation-circle\"\n    })), React.createElement(\"div\", null, extraRender(this.props)))));\n  }\n\n}\n\n_defineProperty(Node, \"contextType\", Context);\n\nconst DefaultNodeRender = ({\n  id,\n  name\n}) => React.createElement(\"div\", {\n  className: \"default-node-render\"\n}, React.createElement(\"div\", {\n  className: \"id\"\n}, id), React.createElement(\"div\", {\n  className: \"name\"\n}, name));"]},"metadata":{},"sourceType":"module"}